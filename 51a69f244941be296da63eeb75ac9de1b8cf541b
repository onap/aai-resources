{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ac45a580_d828785b",
        "filename": "aai-resources/src/main/java/org/onap/aai/interceptors/pre/UTF8ValidationFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-02-19T13:40:40Z",
      "side": 1,
      "message": "Don\u0027t forget a copyright here",
      "revId": "51a69f244941be296da63eeb75ac9de1b8cf541b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47cab4f4_a29443f9",
        "filename": "aai-resources/src/main/java/org/onap/aai/util/UTF8Validator.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-02-19T14:01:07Z",
      "side": 1,
      "message": "Is what you are implementing here only needed for resources, or will you have to implement the same for `traversal`?\nIf you also need to do this for traversal, then we should define this class in `aai-common` and then use it from there.\nThat way we would avoid defining and maintaining it twice.\nThe filters should still be implemented individually for each service, but this class is sensible to have in aai-common",
      "revId": "51a69f244941be296da63eeb75ac9de1b8cf541b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d78c59df_cb1e5384",
        "filename": "aai-resources/src/main/java/org/onap/aai/util/UTF8Validator.java",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-02-19T13:40:40Z",
      "side": 1,
      "message": "Please make this final by setting it in the constructor",
      "revId": "51a69f244941be296da63eeb75ac9de1b8cf541b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fbb150f_d9ad201e",
        "filename": "aai-resources/src/main/java/org/onap/aai/util/UTF8Validator.java",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-02-19T13:44:31Z",
      "side": 1,
      "message": "Correction: constructor is not possible, but you can just declare it there:\n```java\n\tprivate static final CharsetDecoder decoder \u003d StandardCharsets.UTF_8\n\t\t.newDecoder()\n\t\t.onMalformedInput(CodingErrorAction.REPORT)\n\t\t.onUnmappableCharacter(CodingErrorAction.REPORT);\n```",
      "parentUuid": "d78c59df_cb1e5384",
      "revId": "51a69f244941be296da63eeb75ac9de1b8cf541b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c51b8f9_996bd31c",
        "filename": "aai-resources/src/main/java/org/onap/aai/util/UTF8Validator.java",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-02-19T14:01:07Z",
      "side": 1,
      "message": "I think it would be nice if we would be more low level here:\n```java\n\t/**\n\t * Validates if the given string content is valid UTF-8\n\t *\n\t * @param content The string to validate\n\t * @return true if content is valid UTF-8, false otherwise\n\t * @throws AAIException\n\t */\n\tpublic static boolean isValidUTF8(String content){\n\t\tif (content \u003d\u003d null) {\n\t\t\treturn false;\n\t\t}\n\t\tbyte[] bytes \u003d content.getBytes(StandardCharsets.ISO_8859_1);\n\t\treturn isValidUTF8(ByteBuffer.wrap(bytes));\n\t}\n\n\t/**\n\t * Validates if the given bytebuffer content is valid UTF-8\n\t *\n\t * @param content The string to validate\n\t * @return true if content is valid UTF-8, false otherwise\n\t * @throws AAIException\n\t */\n\tpublic static boolean isValidUTF8(ByteBuffer bytes) {\n\t\tif (bytes \u003d\u003d null) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tdecoder.decode(bytes);\n\t\t\treturn true;\n\t\t} catch (CharacterCodingException e) {\n\t\t\treturn false;\n\t\t}\n\t}\n```\nThis way we would have a method for Strings and one where we can avoid the extra conversion to and from `String`.",
      "revId": "51a69f244941be296da63eeb75ac9de1b8cf541b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}